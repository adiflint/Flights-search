openapi: 3.0.0
info:
  title: Simple Inventory API
  description: Work3-Recipe API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/inbar/API_work3/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: user
  description: information about users
- name: recipes
  description: information about recipes
paths:
  /Registration:
    post:
      tags:
      - user
      summary: add a user
      description: add new user from client to server
      requestBody:
        description: user to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        "200":
          description: A new user has been added
        "400":
          description: The action failed
  /Login:
    post:
      tags:
      - user
      summary: user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        "200":
          description: user loged in successfully. the session ID is returned in cookie
            name 'JSESSIONOD'. you need to include this cookie in subsequent requests.
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: JSESSIONID=abcde12345; Path=/; HttpOnly
        "400":
          description: Something went wrong
  /Logout:
    post:
      tags:
      - user
      summary: user logout from the systam
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: the session id - cookie
              example: "55555"
      responses:
        "200":
          description: the user logout seccessfuly
        "400":
          description: Something went wrong
  /user/LastRecipe:
    get:
      tags:
      - user
      - recipes
      summary: get the last recipe that seen by the user
      description: return the last 3 recipes that seen by the user
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeItem'
        "400":
          description: error
    post:
      tags:
      - recipes
      - user
      summary: add recipe to user last watched recipe
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: the recipe id that will be added to last seen recipe
              example: "55555"
      responses:
        "200":
          description: the recipe added.
        "400":
          description: somsing went wrong.
  /user/FavoriteRecipes:
    get:
      tags:
      - user
      - recipes
      summary: get the favourite recipes preview information that taged by the user
      description: return recipes that the user tag as his favourite
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeItem'
        "400":
          description: error
    post:
      tags:
      - recipes
      - user
      summary: add recipe to user favourite recipe
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: the recipe id that will be added to last seen recipe
              example: "55555"
      responses:
        "200":
          description: the recipe added.
        "400":
          description: somsing went wrong.
  /user/AllFamilyRecipes:
    get:
      tags:
      - user
      - recipes
      summary: get the user family recipes
      description: return the user family recipes
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeItem'
        "400":
          description: error
  /user/AllPersonalPreviewRecipes:
    get:
      tags:
      - user
      - recipes
      summary: get the user personal recipes
      description: return the user family recipes
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeItem'
        "400":
          description: error
  /user/PersonalFullRecipe:
    get:
      tags:
      - user
      - recipes
      summary: get the user personal recipes
      description: return the user family recipes
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePage'
        "400":
          description: error
  /recipes/Random:
    get:
      tags:
      - recipes
      summary: get random recipes item
      description: returns the preview information of 3 ramdom recipe
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeItem'
        "400":
          description: Illegal parameters
  /recipes/Information{id}:
    get:
      tags:
      - recipes
      summary: return recipe page
      description: after chosen a RecipeItem returns the recipe page
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePage'
        "400":
          description: Illegal paraneters
  /recipes/Search/query/amount/{numOfRecipe}:
    get:
      tags:
      - recipes
      summary: search recipes according to parameters.
      parameters:
      - name: numOfRecipe
        in: path
        description: The number of returned recipe in page
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          enum:
          - 5
          - 10
          - 15
      - name: cusine
        in: query
        description: The cuisine style of a recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: diet
        in: query
        description: The diet type of the recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: intolerances
        in: query
        description: The intolerances that can be found in the recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: return recipes
          content:
            application/json:
              schema:
                type: array
                description: Recipes items returned from search
                items:
                  $ref: '#/components/schemas/RecipeItem'
        "204":
          description: Did not found any result
        "400":
          description: Illegal parameters
components:
  schemas:
    RecipeItem:
      required:
      - aggregateLikes
      - favorite
      - glutenFree
      - id
      - image
      - link
      - name
      - readyInMinutes
      - seen
      - vegan
      - vegetarian
      type: object
      properties:
        id:
          type: number
          example: 123456
        image:
          type: string
          format: url
          example: https://spoonacular.com/application/frontend/images/food-api/dough.jpg
        name:
          type: string
          example: Chocolate Cake
        readyInMinutes:
          type: number
          example: 25
        aggregateLikes:
          type: number
          example: 123
        vegan:
          type: boolean
          example: false
        vegetarian:
          type: boolean
          example: false
        glutenFree:
          type: boolean
          example: false
        seen:
          type: boolean
          example: false
        favorite:
          type: boolean
          example: false
        link:
          type: string
          format: url
          example: https://spoonacular.com/food-api
    RecipePage:
      required:
      - extendedIngredients
      - instructions
      - recipeItem
      - servings
      type: object
      properties:
        recipeItem:
          $ref: '#/components/schemas/RecipeItem'
        extendedIngredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        servings:
          type: number
          example: 6
        instructions:
          type: string
          description: recipe instructuons
          example: |-
            -Preheat oven to 450F
            -Mix salt, garlic powder, italian seasonings, and paprika in a bowl.
            - In another bowl, mix yogurt & egg together.
            -First place the eggplant strips into egg/yogurt mixture then coat them in flour mixture evenly.
            -Place them in a parchment paper or greased baking pan and bake for 10-15 minutes rotating once and until slightly brown.
            For the tzatziki sauce:
            - In a food processor, put cucumber (seeded, peeled), yogurt, dill, lemon juice, garlic cloves, salt together until smooth.
        analyzedInstructions:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzedInstructionItem'
    AnalyzedInstructionItem:
      type: array
      description: the preparation list of steps
      items:
        $ref: '#/components/schemas/PreparationStep'
    PreparationStep:
      type: object
      properties:
        name:
          type: string
          description: the name of the current step at the preparation.
          example: For the tzatziki sauce
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
    Step:
      type: object
      properties:
        number:
          type: number
          description: step number
          example: 2
        step:
          type: string
          description: the action in the current step
          example: -Preheat oven to 450F
    Ingredient:
      type: object
      properties:
        id:
          type: number
          example: 11209
        name:
          type: string
          example: eggplants
        amount:
          type: string
          example: "0.5"
    UserRegistration:
      required:
      - country
      - email
      - firstName
      - lastName
      - password
      - profilePicture
      - userName
      type: object
      properties:
        userName:
          type: string
          example: user_name
        firstName:
          type: string
          example: inbar
        lastName:
          type: string
          example: tzur
        country:
          type: string
          example: Israel
        password:
          type: string
          example: user@pass
        email:
          type: string
          format: email
          example: user@gmail.com
        profilePicture:
          type: string
          format: url
    UserLogin:
      required:
      - password
      - userName
      type: object
      properties:
        userName:
          type: string
          example: user_name
        password:
          type: string
          example: user@pass
    User:
      type: object
      properties:
        id:
          type: number
          description: uniq number for registerd user
          example: 45
        userInfo:
          $ref: '#/components/schemas/UserRegistration'
        userRecipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipePage'
        userFavoriteRecipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipePage'
